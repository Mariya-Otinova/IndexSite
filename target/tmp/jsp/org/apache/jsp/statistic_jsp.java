/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.15.v20190215
 * Generated at: 2019-06-05 17:19:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class statistic_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ru\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Статистика</title>\r\n");
      out.write("    <link href=\"Style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header class=\"flexbody banner\">\r\n");
      out.write("    <div class=\"flexheader logo\">IndexBot</div>\r\n");
      out.write("    <div class=\"flexheader out\"><button class=\"but go_out\" id=\"go_out\">Выйти</button></div>\r\n");
      out.write("</header>\r\n");
      out.write("<form id=\"finn\" action=\"statisticApp.js\">\r\n");
      out.write("    <main class=\"flexbody infostat\">\r\n");
      out.write("        <div class=\"flexmain table\">\r\n");
      out.write("            <table id=\"tablesite\">\r\n");
      out.write("                <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Адрес сайта</th>\r\n");
      out.write("                    <th>Дата создания</th>\r\n");
      out.write("                    <th>Дата индексации</th>\r\n");
      out.write("                    <th>Колич. уник. слов</th>\r\n");
      out.write("                    <th>Колич. слов</th>\r\n");
      out.write("                    <th>Колич. слов на лат.</th>\r\n");
      out.write("                    <th>Колич. слов на кирил.</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody id=\"tb\">\r\n");
      out.write("                </tbody>\r\n");
      out.write("                <tfoot id=\"tf\">\r\n");
      out.write("                <tr><td><input id=\"addurl\" type=\"text\" size=\"20\" class=\"in\" name=\"addurl\"></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                    <td></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                </tfoot>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"flexmain histograms\">\r\n");
      out.write("            <h1 class=\"histname\">Частота использования <a href=\"#hw\" id=\"showhw\">слов</a><span> и</span>\r\n");
      out.write("                <a href=\"#hl\" id=\"showhl\">букв</a>.</h1>\r\n");
      out.write("            <div class=\"hist hword\" id=\"hw\">\r\n");
      out.write("                <canvas id=\"histword\" width=\"600\" height=\"385\"></canvas>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"hist hletter\" id=\"hl\">\r\n");
      out.write("                <canvas id=\"histletter\" width=\"600\" height=\"385\"></canvas>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </main>\r\n");
      out.write("    <footer class=\"flexbody acquaintance\">\r\n");
      out.write("        <div class=\"flexfooter tie\">\r\n");
      out.write("            <input type=\"button\" class=\"but add\" id=\"add\" name=\"add\" value=\"Добавить\">\r\n");
      out.write("            <input type=\"button\" class=\"but del\" id=\"del\" name=\"del\" value=\"Удалить\">\r\n");
      out.write("            <input type=\"button\" class=\"but index\" id=\"index\" name=\"index\" value=\"Индексировать\">\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("</form>\r\n");
      out.write("<script src=\"statisticApp.js\" type=\"text/javascript\" charset=\"utf-8\" defer></script>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-3.4.1.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("        src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
